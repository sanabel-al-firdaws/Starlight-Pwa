---
import type { Props } from "../../node_modules/@astrojs/starlight/props";
import StarlightHead from "../../node_modules/@astrojs/starlight/components/Head.astro";
import { pwaInfo } from "virtual:pwa-info";
---

{pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}

  <script  >
// From a page:
import { registerSW } from 'virtual:pwa-register'
// check for updates every 10 minutes the page will refresh automatically
const intervalMS = 10 * 60 * 1000
//    10 minutes in seconds =  minutes 10 * seconds  60
const updateSW = registerSW({
  immediate: true,
  onRegisteredSW(swUrl, r) {
    console.log("SW registered: ", swUrl)
    r && setInterval(async () => {
      if (r.installing || !navigator)
        return

      if (('connection' in navigator) && !navigator.onLine)
        return

      const resp = await fetch(swUrl, {
        cache: 'no-store',
        headers: {
          'cache': 'no-store',
          'cache-control': 'no-cache',
        },
      })

      if (resp?.status === 200)
        await r.update()
    }, intervalMS)
  },
  onOfflineReady() {
    console.log("PWA application ready to work offline");
  },
})
  </script>
<script is:inline type="module">
    await import('/pagefind/pagefind-highlight.js');
    new PagefindHighlight({ highlightParam: "highlight" ,addStyles: false ,markOptions:{
		className: "pagefind-highlight",
		exclude: ["[data-pagefind-ignore]", "[data-pagefind-ignore] *"],
		accuracy: { "value": "complementary",
        "limiters": [",","",".",":"]
    },
    acrossElements: true,
    synonyms: {
      "1": "one",
      "2": "two",
    }
	}});
</script>
<StarlightHead {...Astro.props}><slot /></StarlightHead>
